version: '3.8'

networks:
  {{ cookiecutter.project_name }}_net:
    name: {{ cookiecutter.project_name }}_net
    driver: bridge

services:
  backend:
    image: {{cookiecutter.docker_image_backend}}:${DOCKER_TAG:-latest}
    build: ./backend
    container_name: {{cookiecutter.docker_image_backend}}
    restart: always
    ports:
      - "${PORT}:5000"
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    command: > 
      bash -c "if [ '${ENVIRONMENT}' = 'production' ]; then \
        gunicorn --workers 4 --bind ${HOST}:5000 'app:app'; \
      else \
        flask run --debug -p 5000 --host=${HOST}; \
      fi"
    networks:
      - {{ cookiecutter.project_name }}_net
  
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
        - db-data-static:/var/lib/postgresql/data
    networks:
      - {{ cookiecutter.project_name }}_net

volumes:
  db-data-static: